# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                               Application.index
GET 	/page/{page}                    Application.nextPage(int: page)

# Profiles
GET		/profile		                Profiles.index
GET		/profile/{twitterHandle}		Profiles.getUserProfileByTwitterHandle(twitterHandle: String)
GET		/Users							Users.index
POST	/Users/fakeLogin{test}			Users.fakeLogin(test: String)

# Search
GET		/Search							Search.index
GET		/search/search{query}			Search.search(query: String)
GET		/search/			            Search.search()

#Users
GET     /authenticate                   Users.authenticate()
GET     /logout                         Users.logout()

#Articles
GET     /article/new		            Articles.index
GET     /article/{id}	                Articles.getArticle(id: long)
POST    /article/rate 	                Articles.rateArticle(articleId: long, score: int, category: String)
POST    /article/create/                Articles.createArticle()
POST    /article/create/{author}{authorTwitterHandle}{title}{summary}{entry}{headerPicUrl}{category}{rawTags}              Articles.createArticle(author: String, authorTwitterHandle: String, title: String, summary: String, entry: String, headerPicUrl: String, category: String, rawTags: String)

# Comments
POST    /comments/create/{id}{author}{authorTwitterHandle}{commentString}                Comments.createComment(id: long, author: String, authorTwitterHandle: String, commentString: String)
POST    /comments/create                Comments.createComment()

#Pictures
GET     /pictures		                Articles.pictures

#Categories
GET		/category/{categoryName}		Categories.renderByCategory(categoryName: String)

#Tags
GET 	/tags/{tagName}					Tags.renderByTag(tagName: String)

# DEBUG CRUD
#*	    /admin			    module:crud

# REST Api
GET     /api/articles 					        rest.REST.getArticles
GET		/api/articles/{id} 				        rest.REST.getArticle(id: long)
GET		/api/tags						        rest.REST.getTags
GET		/api/tags/{tagName}				        rest.REST.findByTag(tagName: String)
GET		/api/categories					        rest.REST.getCategories
GET		/api/categories/{categoryName}	        rest.REST.findByCategory(categoryName: String)
GET		/api/articles/{articleId}/comments		rest.REST.getComments(articleId: long)

# Ignore favicon requests
GET     /favicon.ico   404

# Map static resources from the /app/public folder to the /public path
GET     /public/       staticDir:public

# Catch all
  *       /{controller}/{action} {controller}.{action}